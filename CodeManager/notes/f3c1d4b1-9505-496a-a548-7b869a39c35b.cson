createdAt: "2020-04-26T17:52:23.566Z"
updatedAt: "2020-05-11T12:31:04.992Z"
type: "MARKDOWN_NOTE"
folder: "fcea623ac52fa0d90bc9"
title: "Git commands"
tags: [
  "cli"
  "git"
  "git_cli"
]
content: '''
  # Git commands
  
  ### Code commits
  ```sh
  git add -A
  ```
  ```sh
  git commit -m '<enter_message>'
  ```
  
  ### Branch
  ```sh
  git checkout <branch_name>
  ```
  create and checkout
  ```sh
  git checkout -b <branch_name>
  ```
  delete remote branch
  ```sh
  git push origin :<branch_name>
  ```
  
  ### Log & Diff
  ```sh
  git log
  ```
  
  ### Rebase
  ```sh
  git rebase -i <base_branch_name>
  ```
  
  ### Cherry pick
  ```sh
  git cherry-pick <commit_id>
  ```
  
  ### Reset 
  working branch to base branch commit
  ```sh
  git reset $(git merge-base <base_branch_name> $(git rev-parse --abbrev-ref HEAD))
  ```
  
  ### Status
  ```sh
  git status
  ```
  status short version
  ```sh
  git status -s
  ```
  status short version with branch info
  ```sh
  git status -sb
  ```
  
  ### Stash
  list stash
  ```sh
  git stash list
  ```
  save staged and tracked files to stash
  ```sh
  git stash push "<name>"
  ```
  apply stashed files
  ```sh
  git stash pop stash@{index}
  ```
  save untracked files to stash
  ```sh
  git stash push -u "<name>"
  ```
  save all files to stash - tracked, untracked, ignored
  ```sh
  git stash push -a "<name>"
  ```
  save partial changes to stash, git will iterate through each change, have to provide y/n to add in stash
  ```sh
  git stash push -p "<name>"
  ```
  show stash diff
  ```sh
  git stash show -p
  ```
  
  ### General
  show all remote
  ```sh
  git remote show
  ```
  show remote origin
  ```sh
  git remote show origin
  ```
'''
linesHighlighted: []
isStarred: false
isTrashed: false
